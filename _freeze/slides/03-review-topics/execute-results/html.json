{
  "hash": "a666b73551f2c442af936dc65e9c26be",
  "result": {
    "markdown": "---\ntitle: Review\nauthor: Stat 251\ndate: '2024-01-25'\npub-date: '2023-01-01'\ncategories:\n- slides\n- Week01\nengine: knitr\n---\n\n\n# Version Control\n\n![Version control is the answer to this file naming  problem.<br>[Image Source](https://phdcomics.com/comics/archive.php?comicid=1531) \"Piled Higher and Deeper\" by Jorge Cham\nwww.phdcomics.com](https://phdcomics.com/comics/archive/phd101212s.gif){width=\"50%\"}\n\n\n## Introduce yourself to git\n\nIn a system terminal, run...\n\n\n::: {.cell hash='03-review-topics_cache/revealjs/unnamed-chunk-1_e38bdb511f7fce091fe5ef05fd538d12'}\n\n```{.bash .cell-code}\ngit config --global user.name 'YOUR NAME HERE'\ngit config --global user.email 'YOUR EMAIL HERE'\ngit config --global --list # check to see it worked\n```\n:::\n\n\n## Set up SSH authentication\n\n[Instructions](https://happygitwithr.com/ssh-keys.html)\n\n\n\n```{=html}\n<iframe width=\"100%\" height=\"600px\" src=\"https://happygitwithr.com/ssh-keys.html\" title=\"SSH Keys\"></iframe>\n\n```\n\n\n## Navigating around Github\n\n(Demo)\n\n## Using RStudio and git\n\n(Demo)\n\n## Homework: [Introduction to Github](../homework/01-git-github.qmd)\n\n\n```{=html}\n<iframe width=\"100%\" height=\"600px\" src=\"../homework/01-git-github.html\"></iframe>\n\n```\n\n\n# Next Time\n\nReview: [General Programming](https://srvanderplas.github.io/stat-computing-r-python/part-gen-prog/00-gen-prog.html)\n\nKnow how to:\n\n- Define a variable\n- Write a function\n- Write an if/else statement\n- load a package or import a library\n- Create a data table structure\n- Get a column, row, or value from a data table\n- Get an item from a list\n\n![](fig/programming-why.gif){.absolute bottom=\"50%\" right=\"10px\" width=\"30%\"}\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}